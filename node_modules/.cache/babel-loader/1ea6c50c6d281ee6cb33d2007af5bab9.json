{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base document\n */\n\n\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Theme } from './theme';\nimport { Point } from '../utils/helper';\n/**\n * Options for customizing the annotation.\n */\n\nvar Annotation =\n/** @class */\nfunction (_super) {\n  __extends(Annotation, _super);\n\n  function Annotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('')], Annotation.prototype, \"content\", void 0);\n\n  __decorate([Property('0px')], Annotation.prototype, \"x\", void 0);\n\n  __decorate([Property('0px')], Annotation.prototype, \"y\", void 0);\n\n  __decorate([Property('None')], Annotation.prototype, \"verticalAlignment\", void 0);\n\n  __decorate([Property('None')], Annotation.prototype, \"horizontalAlignment\", void 0);\n\n  __decorate([Property('-1')], Annotation.prototype, \"zIndex\", void 0);\n\n  return Annotation;\n}(ChildProperty);\n\nexport { Annotation };\n\nvar Arrow =\n/** @class */\nfunction (_super) {\n  __extends(Arrow, _super);\n\n  function Arrow() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('Start')], Arrow.prototype, \"position\", void 0);\n\n  __decorate([Property('false')], Arrow.prototype, \"showArrow\", void 0);\n\n  __decorate([Property(2)], Arrow.prototype, \"size\", void 0);\n\n  __decorate([Property('black')], Arrow.prototype, \"color\", void 0);\n\n  __decorate([Property(0)], Arrow.prototype, \"offSet\", void 0);\n\n  return Arrow;\n}(ChildProperty);\n\nexport { Arrow };\n/**\n * Configures the fonts in maps.\n */\n\nvar Font =\n/** @class */\nfunction (_super) {\n  __extends(Font, _super);\n\n  function Font() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('12px')], Font.prototype, \"size\", void 0);\n\n  __decorate([Property(null)], Font.prototype, \"color\", void 0);\n\n  __decorate([Property('Roboto, Noto, Sans-serif')], Font.prototype, \"fontFamily\", void 0);\n\n  __decorate([Property('Medium')], Font.prototype, \"fontWeight\", void 0);\n\n  __decorate([Property('Medium')], Font.prototype, \"fontStyle\", void 0);\n\n  __decorate([Property(1)], Font.prototype, \"opacity\", void 0);\n\n  return Font;\n}(ChildProperty);\n\nexport { Font };\n/**\n * Configures the borders in the maps.\n */\n\nvar Border =\n/** @class */\nfunction (_super) {\n  __extends(Border, _super);\n\n  function Border() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('')], Border.prototype, \"color\", void 0);\n\n  __decorate([Property(0)], Border.prototype, \"width\", void 0);\n\n  return Border;\n}(ChildProperty);\n\nexport { Border };\n/**\n * Configures the center position in the maps.\n */\n\nvar CenterPosition =\n/** @class */\nfunction (_super) {\n  __extends(CenterPosition, _super);\n\n  function CenterPosition() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(null)], CenterPosition.prototype, \"latitude\", void 0);\n\n  __decorate([Property(null)], CenterPosition.prototype, \"longitude\", void 0);\n\n  return CenterPosition;\n}(ChildProperty);\n\nexport { CenterPosition };\n/**\n * To configure the tooltip settings of the maps.\n */\n\nvar TooltipSettings =\n/** @class */\nfunction (_super) {\n  __extends(TooltipSettings, _super);\n\n  function TooltipSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(false)], TooltipSettings.prototype, \"visible\", void 0);\n\n  __decorate([Property('')], TooltipSettings.prototype, \"template\", void 0);\n\n  __decorate([Property('')], TooltipSettings.prototype, \"fill\", void 0);\n\n  __decorate([Complex({\n    color: 'transparent',\n    width: 1\n  }, Border)], TooltipSettings.prototype, \"border\", void 0);\n\n  __decorate([Complex(Theme.tooltipLabelFont, Font)], TooltipSettings.prototype, \"textStyle\", void 0);\n\n  __decorate([Property(null)], TooltipSettings.prototype, \"format\", void 0);\n\n  __decorate([Property(null)], TooltipSettings.prototype, \"valuePath\", void 0);\n\n  return TooltipSettings;\n}(ChildProperty);\n\nexport { TooltipSettings };\n/**\n * Configures the maps margins.\n */\n\nvar Margin =\n/** @class */\nfunction (_super) {\n  __extends(Margin, _super);\n\n  function Margin() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(10)], Margin.prototype, \"left\", void 0);\n\n  __decorate([Property(10)], Margin.prototype, \"right\", void 0);\n\n  __decorate([Property(10)], Margin.prototype, \"top\", void 0);\n\n  __decorate([Property(10)], Margin.prototype, \"bottom\", void 0);\n\n  return Margin;\n}(ChildProperty);\n\nexport { Margin };\n/*\n * To configure cluster separate connector line style\n */\n\nvar ConnectorLineSettings =\n/** @class */\nfunction (_super) {\n  __extends(ConnectorLineSettings, _super);\n\n  function ConnectorLineSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('black')], ConnectorLineSettings.prototype, \"color\", void 0);\n\n  __decorate([Property(1)], ConnectorLineSettings.prototype, \"width\", void 0);\n\n  __decorate([Property(1)], ConnectorLineSettings.prototype, \"opacity\", void 0);\n\n  return ConnectorLineSettings;\n}(ChildProperty);\n\nexport { ConnectorLineSettings };\n/**\n * To configure cluster in marker\n */\n\nvar MarkerClusterSettings =\n/** @class */\nfunction (_super) {\n  __extends(MarkerClusterSettings, _super);\n\n  function MarkerClusterSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(false)], MarkerClusterSettings.prototype, \"allowClustering\", void 0);\n\n  __decorate([Complex({\n    color: 'transparent',\n    width: 1\n  }, Border)], MarkerClusterSettings.prototype, \"border\", void 0);\n\n  __decorate([Property('#D2691E')], MarkerClusterSettings.prototype, \"fill\", void 0);\n\n  __decorate([Property(1)], MarkerClusterSettings.prototype, \"opacity\", void 0);\n\n  __decorate([Property('Rectangle')], MarkerClusterSettings.prototype, \"shape\", void 0);\n\n  __decorate([Property(12)], MarkerClusterSettings.prototype, \"width\", void 0);\n\n  __decorate([Property(12)], MarkerClusterSettings.prototype, \"height\", void 0);\n\n  __decorate([Property(new Point(0, 0))], MarkerClusterSettings.prototype, \"offset\", void 0);\n\n  __decorate([Property('')], MarkerClusterSettings.prototype, \"imageUrl\", void 0);\n\n  __decorate([Property('')], MarkerClusterSettings.prototype, \"dashArray\", void 0);\n\n  __decorate([Complex({}, Font)], MarkerClusterSettings.prototype, \"labelStyle\", void 0);\n\n  __decorate([Property(false)], MarkerClusterSettings.prototype, \"allowClusterExpand\", void 0);\n\n  __decorate([Complex({}, ConnectorLineSettings)], MarkerClusterSettings.prototype, \"connectorLineSettings\", void 0);\n\n  return MarkerClusterSettings;\n}(ChildProperty);\n\nexport { MarkerClusterSettings };\n/**\n * To configure cluster separate collections.\n */\n\nvar SameMarkerClusterData =\n/** @class */\nfunction (_super) {\n  __extends(SameMarkerClusterData, _super);\n\n  function SameMarkerClusterData() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return SameMarkerClusterData;\n}(ChildProperty);\n\nexport { SameMarkerClusterData };\n/**\n * To configure ColorMapping in Maps\n */\n\nvar ColorMappingSettings =\n/** @class */\nfunction (_super) {\n  __extends(ColorMappingSettings, _super);\n\n  function ColorMappingSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(null)], ColorMappingSettings.prototype, \"from\", void 0);\n\n  __decorate([Property(null)], ColorMappingSettings.prototype, \"to\", void 0);\n\n  __decorate([Property(null)], ColorMappingSettings.prototype, \"value\", void 0);\n\n  __decorate([Property(null)], ColorMappingSettings.prototype, \"color\", void 0);\n\n  __decorate([Property(null)], ColorMappingSettings.prototype, \"minOpacity\", void 0);\n\n  __decorate([Property(null)], ColorMappingSettings.prototype, \"maxOpacity\", void 0);\n\n  __decorate([Property(null)], ColorMappingSettings.prototype, \"label\", void 0);\n\n  __decorate([Property(true)], ColorMappingSettings.prototype, \"showLegend\", void 0);\n\n  return ColorMappingSettings;\n}(ChildProperty);\n\nexport { ColorMappingSettings };\n/**\n * To configure the selection settings\n */\n\nvar SelectionSettings =\n/** @class */\nfunction (_super) {\n  __extends(SelectionSettings, _super);\n\n  function SelectionSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(false)], SelectionSettings.prototype, \"enable\", void 0);\n\n  __decorate([Property(null)], SelectionSettings.prototype, \"fill\", void 0);\n\n  __decorate([Property(1)], SelectionSettings.prototype, \"opacity\", void 0);\n\n  __decorate([Property(false)], SelectionSettings.prototype, \"enableMultiSelect\", void 0);\n\n  __decorate([Complex({\n    color: 'transparent',\n    width: 0\n  }, Border)], SelectionSettings.prototype, \"border\", void 0);\n\n  return SelectionSettings;\n}(ChildProperty);\n\nexport { SelectionSettings };\n/**\n * To configure the highlight settings\n */\n\nvar HighlightSettings =\n/** @class */\nfunction (_super) {\n  __extends(HighlightSettings, _super);\n\n  function HighlightSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(null)], HighlightSettings.prototype, \"fill\", void 0);\n\n  __decorate([Property(false)], HighlightSettings.prototype, \"enable\", void 0);\n\n  __decorate([Property(1)], HighlightSettings.prototype, \"opacity\", void 0);\n\n  __decorate([Complex({\n    color: 'transparent',\n    width: 0\n  }, Border)], HighlightSettings.prototype, \"border\", void 0);\n\n  return HighlightSettings;\n}(ChildProperty);\n\nexport { HighlightSettings };\n/**\n * NavigationSelectedLine\n */\n\nvar NavigationLineSettings =\n/** @class */\nfunction (_super) {\n  __extends(NavigationLineSettings, _super);\n\n  function NavigationLineSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(false)], NavigationLineSettings.prototype, \"visible\", void 0);\n\n  __decorate([Property(1)], NavigationLineSettings.prototype, \"width\", void 0);\n\n  __decorate([Property(null)], NavigationLineSettings.prototype, \"longitude\", void 0);\n\n  __decorate([Property(null)], NavigationLineSettings.prototype, \"latitude\", void 0);\n\n  __decorate([Property('')], NavigationLineSettings.prototype, \"dashArray\", void 0);\n\n  __decorate([Property('black')], NavigationLineSettings.prototype, \"color\", void 0);\n\n  __decorate([Property(0)], NavigationLineSettings.prototype, \"angle\", void 0);\n\n  __decorate([Complex({\n    showArrow: false,\n    position: 'Start',\n    size: 5,\n    color: 'black'\n  }, Arrow)], NavigationLineSettings.prototype, \"arrowSettings\", void 0);\n\n  __decorate([Complex({}, SelectionSettings)], NavigationLineSettings.prototype, \"selectionSettings\", void 0);\n\n  __decorate([Complex({}, HighlightSettings)], NavigationLineSettings.prototype, \"highlightSettings\", void 0);\n\n  return NavigationLineSettings;\n}(ChildProperty);\n\nexport { NavigationLineSettings };\n/**\n * Bubble settings model class\n */\n\nvar BubbleSettings =\n/** @class */\nfunction (_super) {\n  __extends(BubbleSettings, _super);\n\n  function BubbleSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Complex({}, Border)], BubbleSettings.prototype, \"border\", void 0);\n\n  __decorate([Property(false)], BubbleSettings.prototype, \"visible\", void 0);\n\n  __decorate([Property([])], BubbleSettings.prototype, \"dataSource\", void 0);\n\n  __decorate([Property(1000)], BubbleSettings.prototype, \"animationDuration\", void 0);\n\n  __decorate([Property(0)], BubbleSettings.prototype, \"animationDelay\", void 0);\n\n  __decorate([Property('')], BubbleSettings.prototype, \"fill\", void 0);\n\n  __decorate([Property(10)], BubbleSettings.prototype, \"minRadius\", void 0);\n\n  __decorate([Property(20)], BubbleSettings.prototype, \"maxRadius\", void 0);\n\n  __decorate([Property(1)], BubbleSettings.prototype, \"opacity\", void 0);\n\n  __decorate([Property(null)], BubbleSettings.prototype, \"valuePath\", void 0);\n\n  __decorate([Property('Circle')], BubbleSettings.prototype, \"bubbleType\", void 0);\n\n  __decorate([Property(null)], BubbleSettings.prototype, \"colorValuePath\", void 0);\n\n  __decorate([Collection([], ColorMappingSettings)], BubbleSettings.prototype, \"colorMapping\", void 0);\n\n  __decorate([Complex({}, TooltipSettings)], BubbleSettings.prototype, \"tooltipSettings\", void 0);\n\n  __decorate([Complex({}, SelectionSettings)], BubbleSettings.prototype, \"selectionSettings\", void 0);\n\n  __decorate([Complex({}, HighlightSettings)], BubbleSettings.prototype, \"highlightSettings\", void 0);\n\n  return BubbleSettings;\n}(ChildProperty);\n\nexport { BubbleSettings };\n/**\n * To configure title of the maps.\n */\n\nvar CommonTitleSettings =\n/** @class */\nfunction (_super) {\n  __extends(CommonTitleSettings, _super);\n\n  function CommonTitleSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('')], CommonTitleSettings.prototype, \"text\", void 0);\n\n  __decorate([Property('')], CommonTitleSettings.prototype, \"description\", void 0);\n\n  return CommonTitleSettings;\n}(ChildProperty);\n\nexport { CommonTitleSettings };\n/**\n * To configure subtitle of the maps.\n */\n\nvar SubTitleSettings =\n/** @class */\nfunction (_super) {\n  __extends(SubTitleSettings, _super);\n\n  function SubTitleSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Complex({\n    size: Theme.mapsSubTitleFont.size\n  }, Font)], SubTitleSettings.prototype, \"textStyle\", void 0);\n\n  __decorate([Property('Center')], SubTitleSettings.prototype, \"alignment\", void 0);\n\n  return SubTitleSettings;\n}(CommonTitleSettings);\n\nexport { SubTitleSettings };\n/**\n * To configure title of the maps.\n */\n\nvar TitleSettings =\n/** @class */\nfunction (_super) {\n  __extends(TitleSettings, _super);\n\n  function TitleSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Complex({\n    size: Theme.mapsTitleFont.size\n  }, Font)], TitleSettings.prototype, \"textStyle\", void 0);\n\n  __decorate([Property('Center')], TitleSettings.prototype, \"alignment\", void 0);\n\n  __decorate([Complex({}, SubTitleSettings)], TitleSettings.prototype, \"subtitleSettings\", void 0);\n\n  return TitleSettings;\n}(CommonTitleSettings);\n\nexport { TitleSettings };\n/**\n * Options to configure maps Zooming Settings.\n */\n\nvar ZoomSettings =\n/** @class */\nfunction (_super) {\n  __extends(ZoomSettings, _super);\n\n  function ZoomSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(false)], ZoomSettings.prototype, \"enable\", void 0);\n\n  __decorate([Property('Horizontal')], ZoomSettings.prototype, \"toolBarOrientation\", void 0);\n\n  __decorate([Property(null)], ZoomSettings.prototype, \"color\", void 0);\n\n  __decorate([Property('#e61576')], ZoomSettings.prototype, \"highlightColor\", void 0);\n\n  __decorate([Property('#e61576')], ZoomSettings.prototype, \"selectionColor\", void 0);\n\n  __decorate([Property('Far')], ZoomSettings.prototype, \"horizontalAlignment\", void 0);\n\n  __decorate([Property('Near')], ZoomSettings.prototype, \"verticalAlignment\", void 0);\n\n  __decorate([Property(['ZoomIn', 'ZoomOut', 'Reset'])], ZoomSettings.prototype, \"toolbars\", void 0);\n\n  __decorate([Property(true)], ZoomSettings.prototype, \"mouseWheelZoom\", void 0);\n\n  __decorate([Property(false)], ZoomSettings.prototype, \"doubleClickZoom\", void 0);\n\n  __decorate([Property(false)], ZoomSettings.prototype, \"pinchZooming\", void 0);\n\n  __decorate([Property(false)], ZoomSettings.prototype, \"zoomOnClick\", void 0);\n\n  __decorate([Property(1)], ZoomSettings.prototype, \"zoomFactor\", void 0);\n\n  __decorate([Property(10)], ZoomSettings.prototype, \"maxZoom\", void 0);\n\n  __decorate([Property(1)], ZoomSettings.prototype, \"minZoom\", void 0);\n\n  return ZoomSettings;\n}(ChildProperty);\n\nexport { ZoomSettings };\n/**\n * To configure the toggle legend settings in the maps\n */\n\nvar ToggleLegendSettings =\n/** @class */\nfunction (_super) {\n  __extends(ToggleLegendSettings, _super);\n\n  function ToggleLegendSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(false)], ToggleLegendSettings.prototype, \"enable\", void 0);\n\n  __decorate([Property(true)], ToggleLegendSettings.prototype, \"applyShapeSettings\", void 0);\n\n  __decorate([Property(1)], ToggleLegendSettings.prototype, \"opacity\", void 0);\n\n  __decorate([Property('')], ToggleLegendSettings.prototype, \"fill\", void 0);\n\n  __decorate([Complex({\n    color: '',\n    width: 0\n  }, Border)], ToggleLegendSettings.prototype, \"border\", void 0);\n\n  return ToggleLegendSettings;\n}(ChildProperty);\n\nexport { ToggleLegendSettings };\n/**\n * Configures the legend settings.\n */\n\nvar LegendSettings =\n/** @class */\nfunction (_super) {\n  __extends(LegendSettings, _super);\n\n  function LegendSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(false)], LegendSettings.prototype, \"toggleVisibility\", void 0);\n\n  __decorate([Property(false)], LegendSettings.prototype, \"visible\", void 0);\n\n  __decorate([Property('transparent')], LegendSettings.prototype, \"background\", void 0);\n\n  __decorate([Property('Layers')], LegendSettings.prototype, \"type\", void 0);\n\n  __decorate([Property(false)], LegendSettings.prototype, \"invertedPointer\", void 0);\n\n  __decorate([Property('After')], LegendSettings.prototype, \"labelPosition\", void 0);\n\n  __decorate([Property('None')], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n\n  __decorate([Property('Circle')], LegendSettings.prototype, \"shape\", void 0);\n\n  __decorate([Property('')], LegendSettings.prototype, \"width\", void 0);\n\n  __decorate([Property('')], LegendSettings.prototype, \"height\", void 0);\n\n  __decorate([Complex({}, Font)], LegendSettings.prototype, \"textStyle\", void 0);\n\n  __decorate([Property(15)], LegendSettings.prototype, \"shapeWidth\", void 0);\n\n  __decorate([Property(15)], LegendSettings.prototype, \"shapeHeight\", void 0);\n\n  __decorate([Property(10)], LegendSettings.prototype, \"shapePadding\", void 0);\n\n  __decorate([Complex({\n    color: '#000000',\n    width: 0\n  }, Border)], LegendSettings.prototype, \"border\", void 0);\n\n  __decorate([Complex({\n    color: '#000000',\n    width: 0\n  }, Border)], LegendSettings.prototype, \"shapeBorder\", void 0);\n\n  __decorate([Complex({}, CommonTitleSettings)], LegendSettings.prototype, \"title\", void 0);\n\n  __decorate([Complex({}, Font)], LegendSettings.prototype, \"titleStyle\", void 0);\n\n  __decorate([Property('Bottom')], LegendSettings.prototype, \"position\", void 0);\n\n  __decorate([Property('Center')], LegendSettings.prototype, \"alignment\", void 0);\n\n  __decorate([Property('None')], LegendSettings.prototype, \"orientation\", void 0);\n\n  __decorate([Property({\n    x: 0,\n    y: 0\n  })], LegendSettings.prototype, \"location\", void 0);\n\n  __decorate([Property(null)], LegendSettings.prototype, \"fill\", void 0);\n\n  __decorate([Property(1)], LegendSettings.prototype, \"opacity\", void 0);\n\n  __decorate([Property('Default')], LegendSettings.prototype, \"mode\", void 0);\n\n  __decorate([Property(null)], LegendSettings.prototype, \"showLegendPath\", void 0);\n\n  __decorate([Property(null)], LegendSettings.prototype, \"valuePath\", void 0);\n\n  __decorate([Property(false)], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n\n  __decorate([Complex({}, ToggleLegendSettings)], LegendSettings.prototype, \"toggleLegendSettings\", void 0);\n\n  return LegendSettings;\n}(ChildProperty);\n\nexport { LegendSettings };\n/**\n * Customization for Data label settings.\n */\n\nvar DataLabelSettings =\n/** @class */\nfunction (_super) {\n  __extends(DataLabelSettings, _super);\n\n  function DataLabelSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(false)], DataLabelSettings.prototype, \"visible\", void 0);\n\n  __decorate([Complex({\n    width: 0,\n    color: 'transparent'\n  }, Border)], DataLabelSettings.prototype, \"border\", void 0);\n\n  __decorate([Property('black')], DataLabelSettings.prototype, \"fill\", void 0);\n\n  __decorate([Property(1)], DataLabelSettings.prototype, \"opacity\", void 0);\n\n  __decorate([Property(5)], DataLabelSettings.prototype, \"rx\", void 0);\n\n  __decorate([Property(5)], DataLabelSettings.prototype, \"ry\", void 0);\n\n  __decorate([Complex({}, Font)], DataLabelSettings.prototype, \"textStyle\", void 0);\n\n  __decorate([Property('')], DataLabelSettings.prototype, \"labelPath\", void 0);\n\n  __decorate([Property('None')], DataLabelSettings.prototype, \"smartLabelMode\", void 0);\n\n  __decorate([Property('None')], DataLabelSettings.prototype, \"intersectionAction\", void 0);\n\n  __decorate([Property('')], DataLabelSettings.prototype, \"template\", void 0);\n\n  return DataLabelSettings;\n}(ChildProperty);\n\nexport { DataLabelSettings };\n/**\n * To configure the shapeSettings in the maps.\n */\n\nvar ShapeSettings =\n/** @class */\nfunction (_super) {\n  __extends(ShapeSettings, _super);\n\n  function ShapeSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('#A6A6A6')], ShapeSettings.prototype, \"fill\", void 0);\n\n  __decorate([Property([])], ShapeSettings.prototype, \"palette\", void 0);\n\n  __decorate([Property(5)], ShapeSettings.prototype, \"circleRadius\", void 0);\n\n  __decorate([Complex({\n    width: 0,\n    color: '#000000'\n  }, Border)], ShapeSettings.prototype, \"border\", void 0);\n\n  __decorate([Property('')], ShapeSettings.prototype, \"dashArray\", void 0);\n\n  __decorate([Property(1)], ShapeSettings.prototype, \"opacity\", void 0);\n\n  __decorate([Property(null)], ShapeSettings.prototype, \"colorValuePath\", void 0);\n\n  __decorate([Property(null)], ShapeSettings.prototype, \"valuePath\", void 0);\n\n  __decorate([Collection([], ColorMappingSettings)], ShapeSettings.prototype, \"colorMapping\", void 0);\n\n  __decorate([Property(false)], ShapeSettings.prototype, \"autofill\", void 0);\n\n  return ShapeSettings;\n}(ChildProperty);\n\nexport { ShapeSettings };\n/**\n * To configure the marker settings for the maps.\n */\n\nvar MarkerBase =\n/** @class */\nfunction (_super) {\n  __extends(MarkerBase, _super);\n\n  function MarkerBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Complex({\n    color: 'transparent',\n    width: 1\n  }, Border)], MarkerBase.prototype, \"border\", void 0);\n\n  __decorate([Property(null)], MarkerBase.prototype, \"dashArray\", void 0);\n\n  __decorate([Property(false)], MarkerBase.prototype, \"visible\", void 0);\n\n  __decorate([Property('#FF471A')], MarkerBase.prototype, \"fill\", void 0);\n\n  __decorate([Property(10)], MarkerBase.prototype, \"height\", void 0);\n\n  __decorate([Property(10)], MarkerBase.prototype, \"width\", void 0);\n\n  __decorate([Property(1)], MarkerBase.prototype, \"opacity\", void 0);\n\n  __decorate([Property('Balloon')], MarkerBase.prototype, \"shape\", void 0);\n\n  __decorate([Property('')], MarkerBase.prototype, \"legendText\", void 0);\n\n  __decorate([Property(new Point(0, 0))], MarkerBase.prototype, \"offset\", void 0);\n\n  __decorate([Property('')], MarkerBase.prototype, \"imageUrl\", void 0);\n\n  __decorate([Property(null)], MarkerBase.prototype, \"template\", void 0);\n\n  __decorate([Property([])], MarkerBase.prototype, \"dataSource\", void 0);\n\n  __decorate([Complex({}, TooltipSettings)], MarkerBase.prototype, \"tooltipSettings\", void 0);\n\n  __decorate([Property(1000)], MarkerBase.prototype, \"animationDuration\", void 0);\n\n  __decorate([Property(0)], MarkerBase.prototype, \"animationDelay\", void 0);\n\n  __decorate([Complex({}, SelectionSettings)], MarkerBase.prototype, \"selectionSettings\", void 0);\n\n  __decorate([Complex({}, HighlightSettings)], MarkerBase.prototype, \"highlightSettings\", void 0);\n\n  return MarkerBase;\n}(ChildProperty);\n\nexport { MarkerBase };\n\nvar MarkerSettings =\n/** @class */\nfunction (_super) {\n  __extends(MarkerSettings, _super); // tslint:disable-next-line:no-any\n\n\n  function MarkerSettings(parent, propName, defaultValue, isArray) {\n    return _super.call(this, parent, propName, defaultValue, isArray) || this;\n  }\n\n  return MarkerSettings;\n}(MarkerBase);\n\nexport { MarkerSettings };\n/**\n * To configure the layers of the maps.\n */\n\nvar LayerSettings =\n/** @class */\nfunction (_super) {\n  __extends(LayerSettings, _super);\n\n  function LayerSettings() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * @private\n     */\n\n\n    _this.isBaseLayer = false;\n    return _this;\n  }\n\n  __decorate([Property(null)], LayerSettings.prototype, \"shapeData\", void 0);\n\n  __decorate([Property()], LayerSettings.prototype, \"query\", void 0);\n\n  __decorate([Complex({}, ShapeSettings)], LayerSettings.prototype, \"shapeSettings\", void 0);\n\n  __decorate([Property([])], LayerSettings.prototype, \"dataSource\", void 0);\n\n  __decorate([Property('Layer')], LayerSettings.prototype, \"type\", void 0);\n\n  __decorate([Property('Geographic')], LayerSettings.prototype, \"geometryType\", void 0);\n\n  __decorate([Property('Aerial')], LayerSettings.prototype, \"bingMapType\", void 0);\n\n  __decorate([Property('')], LayerSettings.prototype, \"key\", void 0);\n\n  __decorate([Property('Geometry')], LayerSettings.prototype, \"layerType\", void 0);\n\n  __decorate([Property('https://a.tile.openstreetmap.org/level/tileX/tileY.png')], LayerSettings.prototype, \"urlTemplate\", void 0);\n\n  __decorate([Property(true)], LayerSettings.prototype, \"visible\", void 0);\n\n  __decorate([Property('name')], LayerSettings.prototype, \"shapeDataPath\", void 0);\n\n  __decorate([Property('name')], LayerSettings.prototype, \"shapePropertyPath\", void 0);\n\n  __decorate([Property(0)], LayerSettings.prototype, \"animationDuration\", void 0);\n\n  __decorate([Collection([], MarkerSettings)], LayerSettings.prototype, \"markerSettings\", void 0);\n\n  __decorate([Complex({}, MarkerClusterSettings)], LayerSettings.prototype, \"markerClusterSettings\", void 0);\n\n  __decorate([Complex({}, DataLabelSettings)], LayerSettings.prototype, \"dataLabelSettings\", void 0);\n\n  __decorate([Collection([], BubbleSettings)], LayerSettings.prototype, \"bubbleSettings\", void 0);\n\n  __decorate([Collection([], NavigationLineSettings)], LayerSettings.prototype, \"navigationLineSettings\", void 0);\n\n  __decorate([Complex({}, TooltipSettings)], LayerSettings.prototype, \"tooltipSettings\", void 0);\n\n  __decorate([Complex({}, SelectionSettings)], LayerSettings.prototype, \"selectionSettings\", void 0);\n\n  __decorate([Complex({}, HighlightSettings)], LayerSettings.prototype, \"highlightSettings\", void 0);\n\n  __decorate([Complex({}, ToggleLegendSettings)], LayerSettings.prototype, \"toggleLegendSettings\", void 0);\n\n  return LayerSettings;\n}(ChildProperty);\n\nexport { LayerSettings };\n/**\n * Internal use for bing type layer rendering\n */\n\nvar Tile =\n/** @class */\nfunction () {\n  function Tile(x, y, height, width, top, left, src) {\n    if (height === void 0) {\n      height = 256;\n    }\n\n    if (width === void 0) {\n      width = 256;\n    }\n\n    if (top === void 0) {\n      top = 0;\n    }\n\n    if (left === void 0) {\n      left = 0;\n    }\n\n    if (src === void 0) {\n      src = null;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.top = top;\n    this.left = left;\n    this.height = height;\n    this.width = width;\n    this.src = src;\n  }\n\n  return Tile;\n}();\n\nexport { Tile };\n/**\n * Maps area configuration\n */\n\nvar MapsAreaSettings =\n/** @class */\nfunction (_super) {\n  __extends(MapsAreaSettings, _super);\n\n  function MapsAreaSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(null)], MapsAreaSettings.prototype, \"background\", void 0);\n\n  __decorate([Complex({\n    color: 'transparent',\n    width: 1\n  }, Border)], MapsAreaSettings.prototype, \"border\", void 0);\n\n  return MapsAreaSettings;\n}(ChildProperty);\n\nexport { MapsAreaSettings };","map":null,"metadata":{},"sourceType":"module"}