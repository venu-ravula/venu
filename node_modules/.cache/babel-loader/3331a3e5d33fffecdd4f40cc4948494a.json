{"ast":null,"code":"var _jsxFileName = \"/Users/venu/my-app/src/components/maps.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Geosuggest from 'react-geosuggest';\n\nclass Map extends React.Component {\n  /**\n   * Render the example app\n   */\n  render() {\n    var fixtures = [{\n      label: 'Old Elbe Tunnel, Hamburg',\n      location: {\n        lat: 53.5459,\n        lng: 9.966576\n      }\n    }, {\n      label: 'Reeperbahn, Hamburg',\n      location: {\n        lat: 53.5495629,\n        lng: 9.9625838\n      }\n    }, {\n      label: 'Alster, Hamburg',\n      location: {\n        lat: 53.5610398,\n        lng: 10.0259135\n      }\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Geosuggest, {\n      ref: el => this._geoSuggest = el,\n      placeholder: \"Start typing!\",\n      initialValue: \"Hamburg\",\n      fixtures: fixtures,\n      onSuggestSelect: this.onSuggestSelect,\n      location: new google.maps.LatLng(53.558572, 9.9278215),\n      radius: \"20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this._geoSuggest.focus(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Focus\"), React.createElement(\"button\", {\n      onClick: () => this._geoSuggest.update('New Zealand'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Update\"), React.createElement(\"button\", {\n      onClick: () => this._geoSuggest.clear(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Clear\"), React.createElement(\"button\", {\n      onClick: () => this._geoSuggest.selectSuggest(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Search\"));\n  }\n\n  onSuggestSelect(suggest) {\n    console.log(suggest);\n  }\n\n}","map":{"version":3,"sources":["/Users/venu/my-app/src/components/maps.js"],"names":["React","ReactDOM","Geosuggest","Map","Component","render","fixtures","label","location","lat","lng","el","_geoSuggest","onSuggestSelect","google","maps","LatLng","focus","update","clear","selectSuggest","suggest","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChC;;;AAGAC,EAAAA,MAAM,GAAG;AACP,QAAIC,QAAQ,GAAG,CACb;AAACC,MAAAA,KAAK,EAAE,0BAAR;AAAoCC,MAAAA,QAAQ,EAAE;AAACC,QAAAA,GAAG,EAAE,OAAN;AAAeC,QAAAA,GAAG,EAAE;AAApB;AAA9C,KADa,EAEb;AAACH,MAAAA,KAAK,EAAE,qBAAR;AAA+BC,MAAAA,QAAQ,EAAE;AAACC,QAAAA,GAAG,EAAE,UAAN;AAAkBC,QAAAA,GAAG,EAAE;AAAvB;AAAzC,KAFa,EAGb;AAACH,MAAAA,KAAK,EAAE,iBAAR;AAA2BC,MAAAA,QAAQ,EAAE;AAACC,QAAAA,GAAG,EAAE,UAAN;AAAkBC,QAAAA,GAAG,EAAE;AAAvB;AAArC,KAHa,CAAf;AAMA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,GAAG,EAAEC,EAAE,IAAE,KAAKC,WAAL,GAAiBD,EAD5B;AAEE,MAAA,WAAW,EAAC,eAFd;AAGE,MAAA,YAAY,EAAC,SAHf;AAIE,MAAA,QAAQ,EAAEL,QAJZ;AAKE,MAAA,eAAe,EAAE,KAAKO,eALxB;AAME,MAAA,QAAQ,EAAE,IAAIC,MAAM,CAACC,IAAP,CAAYC,MAAhB,CAAuB,SAAvB,EAAkC,SAAlC,CANZ;AAOE,MAAA,MAAM,EAAC,IAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWE;AAAQ,MAAA,OAAO,EAAE,MAAI,KAAKJ,WAAL,CAAiBK,KAAjB,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXF,EAYE;AAAQ,MAAA,OAAO,EAAE,MAAI,KAAKL,WAAL,CAAiBM,MAAjB,CAAwB,aAAxB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,EAaE;AAAQ,MAAA,OAAO,EAAE,MAAI,KAAKN,WAAL,CAAiBO,KAAjB,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAbF,EAcE;AAAQ,MAAA,OAAO,EAAE,MAAI,KAAKP,WAAL,CAAiBQ,aAAjB,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,CADF;AAkBD;;AAGDP,EAAAA,eAAe,CAACQ,OAAD,EAAU;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACD;;AAlC+B","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Geosuggest from 'react-geosuggest';\n \nclass Map extends React.Component {\n  /**\n   * Render the example app\n   */\n  render() {\n    var fixtures = [\n      {label: 'Old Elbe Tunnel, Hamburg', location: {lat: 53.5459, lng: 9.966576}},\n      {label: 'Reeperbahn, Hamburg', location: {lat: 53.5495629, lng: 9.9625838}},\n      {label: 'Alster, Hamburg', location: {lat: 53.5610398, lng: 10.0259135}}\n    ];\n \n    return (\n      <div>\n        <Geosuggest\n          ref={el=>this._geoSuggest=el}\n          placeholder=\"Start typing!\"\n          initialValue=\"Hamburg\"\n          fixtures={fixtures}\n          onSuggestSelect={this.onSuggestSelect}\n          location={new google.maps.LatLng(53.558572, 9.9278215)}\n          radius=\"20\" />\n \n      \n        <button onClick={()=>this._geoSuggest.focus()}>Focus</button>\n        <button onClick={()=>this._geoSuggest.update('New Zealand')}>Update</button>\n        <button onClick={()=>this._geoSuggest.clear()}>Clear</button>\n        <button onClick={()=>this._geoSuggest.selectSuggest()}>Search</button>\n      </div>\n    )\n  }\n \n  \n  onSuggestSelect(suggest) {\n    console.log(suggest);\n  }\n}"]},"metadata":{},"sourceType":"module"}