{"ast":null,"code":"var _jsxFileName = \"/Users/venu/my-app/src/components/chart.js\";\nimport React, { Component } from \"react\";\nimport { Ticker } from \"react-flip-ticker\";\n\nfunction getRandom(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default class Chart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: \"123\"\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({\n        value: getRandom(0, 1000) + \"\"\n      });\n    }, 500);\n  }\n\n  render() {\n    return React.createElement(Ticker, {\n      text: this.state.value,\n      textClassName: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/venu/my-app/src/components/chart.js"],"names":["React","Component","Ticker","getRandom","min","max","Math","ceil","floor","random","Chart","state","value","componentDidMount","setInterval","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEC,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,GAAxB,EAA6B;AAC5BD,EAAAA,GAAG,GAAGE,IAAI,CAACC,IAAL,CAAUH,GAAV,CAAN;AACAC,EAAAA,GAAG,GAAGC,IAAI,CAACE,KAAL,CAAWH,GAAX,CAAN;AACA,SAAOC,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,MAAiBJ,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACD;;AAED,eAAe,MAAMM,KAAN,SAAoBT,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC3CU,KAD2C,GACnC;AACNC,MAAAA,KAAK,EAAE;AADD,KADmC;AAAA;;AAI3CC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,WAAW,CAAC,MAAM;AAChB,WAAKC,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAET,SAAS,CAAC,CAAD,EAAI,IAAJ,CAAT,GAAqB;AADhB,OAAd;AAGD,KAJU,EAIR,GAJQ,CAAX;AAKD;;AAEDa,EAAAA,MAAM,GAAG;AACP,WAAO,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWC,KAAzB;AAAgC,MAAA,aAAa,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAd0C","sourcesContent":["import React, { Component } from \"react\";\nimport { Ticker } from \"react-flip-ticker\"\n\n function getRandom(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default class Chart extends Component {\n  state = {\n    value: \"123\",\n  };\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({\n        value: getRandom(0, 1000) + \"\",\n      });\n    }, 500);\n  }\n\n  render() {\n    return <Ticker text={this.state.value} textClassName=\"text\" />;\n  }\n}"]},"metadata":{},"sourceType":"module"}