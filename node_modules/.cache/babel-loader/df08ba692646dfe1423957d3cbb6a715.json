{"ast":null,"code":"var _jsxFileName = \"/Users/venu/my-app/src/components/maps.js\";\n\n/*global google*/\nimport { render } from 'react-dom';\nimport React from \"react\";\nexport default class Maps extends React.Component {\n  render() {\n    google.charts.load('current', {\n      'packages': ['geochart'],\n      // Note: you will need to get a mapsApiKey for your project.\n      // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\n      'mapsApiKey': 'AIzaSyD-9tSrke72PouQMnMX-a7eZSW0jkFMBWY'\n    });\n    google.charts.setOnLoadCallback(drawRegionsMap);\n\n    function drawRegionsMap() {\n      var data = google.visualization.arrayToDataTable([['Country', 'Latitude'], ['India', 36], ['Pakistan', 6]]);\n      dataTable.addRows(1);\n      dataTable.addColumn('number', 'LATITUDE', 'Latitude');\n      dataTable.addColumn('number', 'LONGITUDE', 'Longitude');\n      dataTable.addColumn('number', 'VALUE', 'Value'); // Won't use this column, but still must define it.\n\n      dataTable.addColumn('string', 'HOVER', 'HoverText');\n      data.setValue(0, 0, 47.00);\n      data.setValue(0, 1, -122.00);\n      data.setValue(0, 3, \"Hello World!\");\n      var options = {\n        region: '034',\n        // Africa\n        colorAxis: {\n          colors: ['#00853f', 'black', '#e31b23']\n        },\n        backgroundColor: '#81d4fa',\n        datalessRegionColor: '#f8bbd0',\n        defaultColor: '#f5f5f5'\n      };\n      var chart = new google.visualization.GeoChart(document.getElementById('geochart-colors'));\n      chart.draw(data, options);\n    }\n\n    ;\n    return React.createElement(\"div\", {\n      id: \"geochart-colors\",\n      style: {\n        width: \"700px\",\n        height: \"433px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/venu/my-app/src/components/maps.js"],"names":["render","React","Maps","Component","google","charts","load","setOnLoadCallback","drawRegionsMap","data","visualization","arrayToDataTable","dataTable","addRows","addColumn","setValue","options","region","colorAxis","colors","backgroundColor","datalessRegionColor","defaultColor","chart","GeoChart","document","getElementById","draw","width","height"],"mappings":";;AAAA;AACA,SAASA,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eAAe,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAC9CH,EAAAA,MAAM,GAAG;AAELI,IAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB,SAAnB,EAA8B;AAC1B,kBAAW,CAAC,UAAD,CADe;AAE1B;AACA;AACA,oBAAc;AAJY,KAA9B;AAMEF,IAAAA,MAAM,CAACC,MAAP,CAAcE,iBAAd,CAAgCC,cAAhC;;AAEA,aAASA,cAAT,GAA0B;AACxB,UAAIC,IAAI,GAAGL,MAAM,CAACM,aAAP,CAAqBC,gBAArB,CAAsC,CAC/C,CAAC,SAAD,EAAc,UAAd,CAD+C,EAE/C,CAAC,OAAD,EAAU,EAAV,CAF+C,EAEjC,CAAC,UAAD,EAAa,CAAb,CAFiC,CAAtC,CAAX;AAIAC,MAAAA,SAAS,CAACC,OAAV,CAAkB,CAAlB;AACZD,MAAAA,SAAS,CAACE,SAAV,CAAoB,QAApB,EAA8B,UAA9B,EAA0C,UAA1C;AACAF,MAAAA,SAAS,CAACE,SAAV,CAAoB,QAApB,EAA8B,WAA9B,EAA2C,WAA3C;AACAF,MAAAA,SAAS,CAACE,SAAV,CAAoB,QAApB,EAA8B,OAA9B,EAAuC,OAAvC,EARoC,CAQa;;AACjDF,MAAAA,SAAS,CAACE,SAAV,CAAoB,QAApB,EAA8B,OAA9B,EAAuC,WAAvC;AACYL,MAAAA,IAAI,CAACM,QAAL,CAAc,CAAd,EAAgB,CAAhB,EAAkB,KAAlB;AACAN,MAAAA,IAAI,CAACM,QAAL,CAAc,CAAd,EAAgB,CAAhB,EAAkB,CAAC,MAAnB;AACAN,MAAAA,IAAI,CAACM,QAAL,CAAc,CAAd,EAAgB,CAAhB,EAAkB,cAAlB;AACA,UAAIC,OAAO,GAAG;AACZC,QAAAA,MAAM,EAAE,KADI;AACG;AACfC,QAAAA,SAAS,EAAE;AAACC,UAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,OAAZ,EAAqB,SAArB;AAAT,SAFC;AAGZC,QAAAA,eAAe,EAAE,SAHL;AAIZC,QAAAA,mBAAmB,EAAE,SAJT;AAKZC,QAAAA,YAAY,EAAE;AALF,OAAd;AAQA,UAAIC,KAAK,GAAG,IAAInB,MAAM,CAACM,aAAP,CAAqBc,QAAzB,CAAkCC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAlC,CAAZ;AACAH,MAAAA,KAAK,CAACI,IAAN,CAAWlB,IAAX,EAAiBO,OAAjB;AACD;;AAAA;AAGH,WACI;AAAK,MAAA,EAAE,EAAC,iBAAR;AAA0B,MAAA,KAAK,EAAE;AAACY,QAAAA,KAAK,EAAE,OAAR;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAEE;;AAvCwC","sourcesContent":["/*global google*/\nimport { render } from 'react-dom';\nimport React from \"react\"\n\n\nexport default class Maps extends React.Component {\n    render() {\n\n        google.charts.load('current', {\n            'packages':['geochart'],\n            // Note: you will need to get a mapsApiKey for your project.\n            // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\n            'mapsApiKey': 'AIzaSyD-9tSrke72PouQMnMX-a7eZSW0jkFMBWY'\n          });\n          google.charts.setOnLoadCallback(drawRegionsMap);\n    \n          function drawRegionsMap() {\n            var data = google.visualization.arrayToDataTable([\n              ['Country',   'Latitude'],\n              ['India', 36],['Pakistan', 6]\n            ]);\n            dataTable.addRows(1);\ndataTable.addColumn('number', 'LATITUDE', 'Latitude');\ndataTable.addColumn('number', 'LONGITUDE', 'Longitude');\ndataTable.addColumn('number', 'VALUE', 'Value'); // Won't use this column, but still must define it.\ndataTable.addColumn('string', 'HOVER', 'HoverText');\n            data.setValue(0,0,47.00);\n            data.setValue(0,1,-122.00);\n            data.setValue(0,3,\"Hello World!\");\n            var options = {\n              region: '034', // Africa\n              colorAxis: {colors: ['#00853f', 'black', '#e31b23']},\n              backgroundColor: '#81d4fa',\n              datalessRegionColor: '#f8bbd0',\n              defaultColor: '#f5f5f5',\n            };\n    \n            var chart = new google.visualization.GeoChart(document.getElementById('geochart-colors'));\n            chart.draw(data, options);\n          };\n\n\n        return (\n            <div id=\"geochart-colors\" style={{width: \"700px\", height: \"433px\"}}></div>\n        )}\n\n                \n}"]},"metadata":{},"sourceType":"module"}