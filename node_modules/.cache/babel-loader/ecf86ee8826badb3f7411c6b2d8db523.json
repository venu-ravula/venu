{"ast":null,"code":"import _slicedToArray from \"/Users/venu/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/venu/my-app/src/components/maps.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport { scaleQuantize } from \"d3-scale\";\nimport { csv } from \"d3-fetch\";\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\";\nconst colorScale = scaleQuantize().domain([1, 10]).range([\"#ffedea\", \"#ffcec5\", \"#ffad9f\", \"#ff8a75\", \"#ff5533\", \"#e2492d\", \"#be3d26\", \"#9a311f\", \"#782618\"]);\n\nconst MapChart = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  useEffect(() => {\n    // https://www.bls.gov/lau/\n    csv(\"/unemployment-by-county-2017.csv\").then(counties => {\n      setData(counties);\n    });\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(ComposableMap, {\n    projection: \"geoAlbersUsa\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Geographies, {\n    geography: geoUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, ({\n    geographies\n  }) => geographies.map(geo => {\n    const cur = data.find(s => s.id === geo.id);\n    return React.createElement(Geography, {\n      key: geo.rsmKey,\n      geography: geo,\n      fill: colorScale(cur ? cur.unemployment_rate : \"#EEE\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }))));\n};\n\nexport default MapChart;","map":{"version":3,"sources":["/Users/venu/my-app/src/components/maps.js"],"names":["React","useState","useEffect","ComposableMap","Geographies","Geography","scaleQuantize","csv","geoUrl","colorScale","domain","range","MapChart","data","setData","then","counties","geographies","map","geo","cur","find","s","id","rsmKey","unemployment_rate"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,SAArC,QAAsD,mBAAtD;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,SAASC,GAAT,QAAoB,UAApB;AAEA,MAAMC,MAAM,GAAG,2DAAf;AAEA,MAAMC,UAAU,GAAGH,aAAa,GAC7BI,MADgB,CACT,CAAC,CAAD,EAAI,EAAJ,CADS,EAEhBC,KAFgB,CAEV,CACL,SADK,EAEL,SAFK,EAGL,SAHK,EAIL,SAJK,EAKL,SALK,EAML,SANK,EAOL,SAPK,EAQL,SARK,EASL,SATK,CAFU,CAAnB;;AAcA,MAAMC,QAAQ,GAAG,MAAM;AAAA,oBACGX,QAAQ,CAAC,EAAD,CADX;AAAA;AAAA,QACdY,IADc;AAAA,QACRC,OADQ;;AAGrBZ,EAAAA,SAAS,CAAC,MAAM;AACd;AACAK,IAAAA,GAAG,CAAC,kCAAD,CAAH,CAAwCQ,IAAxC,CAA6CC,QAAQ,IAAI;AACvDF,MAAAA,OAAO,CAACE,QAAD,CAAP;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,SACE,0CACE,oBAAC,aAAD;AAAe,IAAA,UAAU,EAAC,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAER,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAES,IAAAA;AAAF,GAAD,KACCA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,IAAI;AACrB,UAAMC,GAAG,GAAGP,IAAI,CAACQ,IAAL,CAAUC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASJ,GAAG,CAACI,EAA5B,CAAZ;AACA,WACE,oBAAC,SAAD;AACE,MAAA,GAAG,EAAEJ,GAAG,CAACK,MADX;AAEE,MAAA,SAAS,EAAEL,GAFb;AAGE,MAAA,IAAI,EAAEV,UAAU,CAACW,GAAG,GAAGA,GAAG,CAACK,iBAAP,GAA2B,MAA/B,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GATD,CAFJ,CADF,CADF,CADF;AAoBD,CA9BD;;AAgCA,eAAeb,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport { scaleQuantize } from \"d3-scale\";\nimport { csv } from \"d3-fetch\";\n\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\";\n\nconst colorScale = scaleQuantize()\n  .domain([1, 10])\n  .range([\n    \"#ffedea\",\n    \"#ffcec5\",\n    \"#ffad9f\",\n    \"#ff8a75\",\n    \"#ff5533\",\n    \"#e2492d\",\n    \"#be3d26\",\n    \"#9a311f\",\n    \"#782618\"\n  ]);\n\nconst MapChart = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    // https://www.bls.gov/lau/\n    csv(\"/unemployment-by-county-2017.csv\").then(counties => {\n      setData(counties);\n    });\n  }, []);\n\n  return (\n    <>\n      <ComposableMap projection=\"geoAlbersUsa\">\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map(geo => {\n              const cur = data.find(s => s.id === geo.id);\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill={colorScale(cur ? cur.unemployment_rate : \"#EEE\")}\n                />\n              );\n            })\n          }\n        </Geographies>\n      </ComposableMap>\n    </>\n  );\n};\n\nexport default MapChart;"]},"metadata":{},"sourceType":"module"}