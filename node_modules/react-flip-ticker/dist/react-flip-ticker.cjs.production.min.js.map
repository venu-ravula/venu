{"version":3,"file":"react-flip-ticker.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { Fragment, Children, useRef } from \"react\";\n\nconst range = (length: number) => Array.from({ length }, (_, i) => i);\nconst splitText = (text = \"\") => (text + \"\").split(\"\");\nconst numberRange = range(10).map(p => p + \"\");\nconst numAdditional = [\",\", \".\"];\nconst numberItems = [...numberRange, ...numAdditional];\nconst isNumber = (v: string) => !isNaN(parseInt(v, 10));\nconst uniq = (values: string[]) => {\n  return values.filter((value, index) => {\n    return values.indexOf(value) === index;\n  });\n};\n\ntype MeasureMap = { [key: string]: { width: number; height: number } };\n\nconst hiddenPieceStyle: React.CSSProperties = {\n  visibility: \"hidden\",\n};\n\nconst tickStyle: React.CSSProperties = {\n  overflow: \"hidden\",\n  display: \"inline-block\",\n  position: \"relative\",\n};\n\nconst rotatorStyle: React.CSSProperties = {\n  position: \"absolute\",\n  left: \"0\",\n  top: \"0\",\n  bottom: \"0\",\n  right: \"0\",\n};\n\nconst pieceStyle: React.CSSProperties = {\n  position: \"absolute\",\n  left: \"0\",\n  zIndex: 10,\n};\n\ninterface TickProps {\n  children: string;\n  rotateItems: string[];\n  className: string;\n  currentClassName: string;\n  hiddenClassName: string;\n  duration: string;\n  measureMap: MeasureMap;\n}\n\nexport const Tick: React.FC<{\n  children: string;\n  rotateItems: string[];\n}> = props => {\n  //@ts-ignore\n  return <InternalTick {...props} />;\n};\n\nconst InternalTick: React.FC<TickProps> = ({\n  children,\n  measureMap,\n  rotateItems,\n  className,\n  currentClassName,\n  hiddenClassName,\n  duration,\n}) => {\n  const index = rotateItems.indexOf(children);\n  const { height, width } = measureMap[children];\n\n  return (\n    <span className={className} style={{ ...tickStyle, width: `${width}px` }}>\n      <span className={className} style={hiddenPieceStyle}>\n        {children}\n      </span>\n      <span\n        style={{\n          ...rotatorStyle,\n          transition: `transform ${duration}`,\n          transform: `translateY(${height * index * -1}px)`,\n        }}\n      >\n        {rotateItems.map((value, i) => {\n          return (\n            <span\n              key={value + i}\n              className={[\n                className,\n                value === children ? currentClassName : hiddenClassName,\n              ].join(\" \")}\n              style={{ ...pieceStyle, top: i * height }}\n            >\n              {value}\n            </span>\n          );\n        })}\n      </span>\n    </span>\n  );\n};\n\nconst measure = (\n  className: string,\n  value: string,\n): { width: number; height: number } => {\n  const d = document.createElement(\"span\");\n  d.textContent = value;\n  d.className = className;\n  d.style.opacity = \"0\";\n  d.style.pointerEvents = \"none\";\n  d.style.position = \"absolute\";\n  document.body.appendChild(d);\n  const height = d.offsetHeight;\n  const width = d.offsetWidth;\n  document.body.removeChild(d);\n  return {\n    height,\n    width,\n  };\n};\n\ninterface Props {\n  children: React.ReactNode;\n  currentClassName?: string;\n  hiddenClassName?: string;\n  textClassName: string;\n  duration?: string;\n}\n\nexport const Ticker: React.FC<Props> = ({\n  children,\n  textClassName,\n  currentClassName = \"currentTicker\",\n  hiddenClassName = \"hiddenTicker\",\n  duration = \".5s\",\n}) => {\n  const measureMap = useRef<MeasureMap>({});\n  const measureStrings: string[] = Children.map(children, child => {\n    if (typeof child === \"string\" || typeof child === \"number\") {\n      return splitText(`${child}`);\n    } else {\n      //@ts-ignore\n      return child.props && child.props.rotateItems;\n    }\n  }).flat();\n\n  const hasNumbers = measureStrings.find(v => isNumber(v)) !== undefined;\n  const rotateItems = uniq([\n    ...(hasNumbers ? numberItems : []),\n    ...measureStrings,\n  ]);\n\n  if (Object.keys(measureMap.current).length !== rotateItems.length) {\n    rotateItems.forEach(item => {\n      measureMap.current[item] = measure(textClassName, item);\n    });\n  }\n\n  return (\n    <Fragment>\n      {Children.map(children, child => {\n        if (typeof child === \"string\" || typeof child === \"number\") {\n          return splitText(`${child}`).map((text, index) => {\n            let items = isNumber(text) ? numberItems : [text];\n            return (\n              <InternalTick\n                key={index}\n                duration={duration}\n                currentClassName={currentClassName}\n                hiddenClassName={hiddenClassName}\n                className={textClassName}\n                rotateItems={items}\n                measureMap={measureMap.current}\n              >\n                {text}\n              </InternalTick>\n            );\n          });\n        } else {\n          //@ts-ignore\n          return React.cloneElement(child, {\n            duration,\n            className: textClassName,\n            measureMap: measureMap.current,\n            currentClassName: currentClassName,\n            hiddenClassName: hiddenClassName,\n          });\n        }\n      })}\n    </Fragment>\n  );\n};\n"],"names":["splitText","text","split","numberItems","length","Array","from","_","i","range","map","p","isNumber","v","isNaN","parseInt","hiddenPieceStyle","visibility","tickStyle","overflow","display","position","rotatorStyle","left","top","bottom","right","pieceStyle","zIndex","InternalTick","children","measureMap","rotateItems","className","currentClassName","hiddenClassName","duration","index","indexOf","height","React","style","width","transition","transform","value","key","join","props","values","textClassName","useRef","measureStrings","Children","child","flat","hasNumbers","undefined","find","filter","Object","keys","current","forEach","item","d","document","createElement","textContent","opacity","pointerEvents","body","appendChild","offsetHeight","offsetWidth","removeChild","measure","Fragment","items","cloneElement"],"mappings":"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"}