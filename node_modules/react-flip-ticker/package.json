{
  "_from": "react-flip-ticker@^1.0.2",
  "_id": "react-flip-ticker@1.0.2",
  "_inBundle": false,
  "_integrity": "sha512-HtS60oTG3BNV5UM6Ay+v0fDVVwCfmY2nKyjkNPv/m4HGEY6TESK2xuWHARimfimlwF6L3eXlI2mfcKeUbRooPg==",
  "_location": "/react-flip-ticker",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "react-flip-ticker",
    "fetchSpec": "^1.0.2",
    "name": "react-flip-ticker",
    "raw": "react-flip-ticker@^1.0.2",
    "rawSpec": "^1.0.2",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-flip-ticker/-/react-flip-ticker-1.0.2.tgz",
  "_shasum": "dccb6d0e040b11e3791a9d32e9552f23427ac83a",
  "_shrinkwrap": null,
  "_spec": "react-flip-ticker@^1.0.2",
  "_where": "/Users/venu/my-app",
  "author": {
    "name": "Jason Brown"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "``` yarn add react-flip-ticker npm install react-flip-ticker ```",
  "devDependencies": {
    "@types/jest": "^24.0.22",
    "@types/react": "^16.9.11",
    "@types/react-dom": "^16.9.4",
    "husky": "^3.0.9",
    "react": "^16.11.0",
    "react-dom": "^16.11.0",
    "tsdx": "^0.11.0",
    "tslib": "^1.10.0",
    "typescript": "^3.7.2"
  },
  "files": [
    "dist"
  ],
  "husky": {
    "hooks": {
      "pre-commit": "tsdx lint"
    }
  },
  "license": "MIT",
  "main": "dist/index.js",
  "module": "dist/react-flip-ticker.esm.js",
  "name": "react-flip-ticker",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": ">=16"
  },
  "prettier": {
    "printWidth": 80,
    "semi": true,
    "singleQuote": false,
    "trailingComma": "all"
  },
  "readme": "# React Flip Ticker\n\n```\nyarn add react-flip-ticker\nnpm install react-flip-ticker\n```\n\n```js\nimport { Ticker } from \"react-flip-ticker\";\n```\n\n# Migrating to v1\n\nWe no longer support `text` as a prop, just put the `text` you wish as your children.\nWe now also support any character and not just numbers\n\nNumber ticker for React Web.\n\n![](./webflipper.gif)\n\nSupply some value as `children`, and a `textClassName`, then start ticking values!\n\n```js\n<Ticker textClassName=\"text\">{value}</Ticker>\n```\n\nBasic Demo\n\n```tsx\nimport React, { useState, useEffect } from \"react\";\nimport { render } from \"react-dom\";\nimport { Ticker } from \"react-flip-ticker\";\n\nfunction getRandom(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst App = () => {\n  const [state, setState] = useState<any>({\n    value: getRandom(0, 100000),\n  });\n\n  useEffect(() => {\n    setInterval(() => {\n      setState({\n        value: getRandom(0, 100000),\n      });\n    }, 500);\n  }, []);\n\n  return <Ticker textClassName=\"text\">{state.value}</Ticker>;\n};\n\nrender(<App />, document.getElementById(\"root\"));\n```\n\nYou can also supply specific `Tick` elements and it will rotate between them.\n\nAdvanced Demo\n\n```tsx\nimport React, { useState, useEffect } from \"react\";\nimport { render } from \"react-dom\";\nimport { Ticker, Tick } from \"react-flip-ticker\";\n\nfunction getRandom(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst currencies = [\"$\", \"¥\", \"€\"];\n\nconst App = () => {\n  const [state, setState] = useState<any>({\n    currency: currencies[getRandom(0, 2)],\n    value: getRandom(0, 100000),\n  });\n\n  useEffect(() => {\n    setInterval(() => {\n      setState({\n        currency: currencies[getRandom(0, 2)],\n        value: getRandom(0, 100000),\n      });\n    }, 500);\n  }, []);\n\n  return (\n    <Ticker textClassName=\"text\">\n      <Tick rotateItems={currencies}>{state.currency}</Tick>\n      {state.value.toLocaleString()}\n    </Ticker>\n  );\n};\n\nrender(<App />, document.getElementById(\"root\"));\n```\n",
  "readmeFilename": "README.md",
  "scripts": {
    "build": "tsdx build",
    "lint": "tsdx lint",
    "prepublishOnly": "yarn build",
    "start": "tsdx watch",
    "test": "tsdx test --env=jsdom"
  },
  "typings": "dist/index.d.ts",
  "version": "1.0.2"
}
